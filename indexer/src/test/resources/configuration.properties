#
# Copyright (c) 2018.  Dan Brown <dan@likethecolor.com>
# <p/>
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
# <p/>
# http://www.apache.org/licenses/LICENSE-2.0
# <p/>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.
#

# The convention for lists are for each element to be delimited by a semi-colon
# for example: key=value0;value1;value2
#
# The convention for elements of a list that have more than one value is to
# delimit each element with a colon.
#
# For example, if a list contains one element and that element has 2 parts:
#
#  key=part0:part1
#
# If an entry is a list that contains elements with multiple parts:
#
#  key=partA0:partA1;partB0:partB1
#

# name: batch-size
# type: integer
#
# The number of docs to send to solr for indexing in each batch.
#
batch-size=8675309

# name: collection-name
# type: string
#
# The name of solr collection.
#
collection-name=sample-collection

# name: csv-delimiter
# type: character
#
# The character that delimits each column in the data file.
#
csv-delimiter=|

# name: csv-quote-character
# type: character
#
# The character that surrounds the value in each column.
#
csv-quote-character=+

# name: fields
# type: list
#
# The data file will contain multiple columns.  This application does not pay
# attention to the names of those columns as they may appear in the file (first
# line/header is ignored - see first-row-is-header below).
#
# This application uses only the column positions.  This list maps the column
# positions to the solr field names.
#
# The format of the list is:
#
#   field_name:field_type:date format
#
# The field_name is the name of the solr field.
# The field_type is the data type (see Constants.FIELD_TYPE_).
#   If no type is given string is assumed.
# The third part is an optional date format (see SimpleDateFormat).
#
fields=id:long;code:string;create_datetime:datetime:MM/dd/yyyy hh:mm:ssa;update_datetime:datetime:MM/dd/yyyy hh:mm:ssa;name:string;url:string;country:string;currency:string;language:string

# name: first-row-is-header
# type: boolean
#
# Set this property to false if the first row of the data file contains data and
# should be parsed.  Setting it to true means that the first line of the data
# file is a row of column names.
#
first-row-is-header=true

# name: joined-fields
# type: list
#
# There are times when the value of one field is the joining of other fields.
#
# The format of this list is:
#
#    solr_field=field0:field1:...fieldN;solr_fieldA=fieldAA:fieldBB
#
# The solr_field is the name of the field as it appears in the "fields" property.
# This is the name of the field whose value of which the others are composed.
# The fields field0, field1, etc. are the names of the fields (as they appear in
# "fields") whose value will be joined to form the value of solr_field.
#
joined-fields=joined_field=site_id:site_code:updated_datetime

# name: literals
# type: list
#
# There may be some values that need to be added to solr that are not in the
# data file.
#
# For instance, say every document should have the same value "site" in the field
# "index_type".  This list lets you do that.  The format of this list is:
#
#   field_name:field_type:literal value
#
# The field_name is the solr field name.  The field_type is the data type (see
# Constants.FIELD_TYPE_*).  The last field is the literal value that should
# be stored in the field.
#
literals=type:string:site;type_sort:int:3

# name: multivalue-field-delimiter
# type: string
#
# For those fields that are type array this is the string that the values
# are delimited by.
#
multivalue-field-delimiter=\u0001

# name: optimize-index
# type: boolean
#
# Set this property to true if the index should be optimized.
#
optimize-index=false

# name: path-to-data-file
# type: string
#
# This should be the full path to the file containing data in CSV format that
# needs to be indexed.  This should be a file path, not a classpath.
#
path-to-data-file=/tmp/sample.csv

# name: path-to-json-data-file
# type: string
#
# This should be the full path to the file containing data in JSON format that
# needs to be indexed.  This should be a file path, not a classpath.
#
path-to-json-data-file=/tmp/downloaded-data.json

# name: retry-count
# type: integer
# default: 4
#
# Number of times the process will retry sending a batch to solr (e.g., when
# there is an error sending the batch).
# Note that a value of < 0 will set the value to 4 (default).
#
retry-count=5

# name: skip-fields
# type: list
#
# This is a list of field names (from the fields property above) that should
# be ignored.
#
# The data file may contain columns that should not be indexed.  This list
# contains the field names that should not be indexed.  Since fields can be
# ignored the names of the fields in the fields property list can be
# placeholders.
#
# For example:
#
#   fields=...;dummy0:int;dummy1:string
#   skip-fields=dummy0;dummy1
#
skip-fields=create_datetime;update_datetime;country;currency;language

# name: sleep-millis-between-retries
# type: long
# default: 5000
#
# When retrying the process will sleep this number of milliseconds before retrying
# again.
# Note that a value of < 0 will set the value to 0
#
sleep-millis-between-retries=6000

# name: soft-commit-after-each-batch
# type: boolean
#
# Set this property to true if there should be a soft commit after each batch.
#
soft-commit-after-each-batch=true

# name: thread-count
# type: integer
#
# Number of threads to create.
# Note that a value of <= 0 will set the value to 1.
#
thread-count=5

# name: unique-key-field-name
# value: string
#
# This is the name of the solr field that is the unique id (uniqueKey in
# schema.xml).
#
unique-key-field-name=id

# name: unique-key-field-value
# type: string or list
#
# Name or names listed in the fields and/or literals property below whose value
# should be used as the value of solr's uniqueKey (unique_key_field_name below).
#
# For example, if the value of site_id should be used as the unique id for each
# document, the property should look like:
#
#  unique-key-field-value=site_id
#
# If the value of the unique id should be index_type (from literals) and site_id
# and site_code and site_name, this property should look like:
#
#  unique-key-field-value=index_type;site_id;site_code;site_name
#
# The final value for the unique id will be the value of those fields concatenated
# with the unique-key-field-value_delimiter as a delimiter.
#
# The final value will be the value of these fields in the order given
#
unique-key-field-value=site_id;type

# name: unique-key-field-value-delimiter
# type: string
#
# If there are multiple values in the unique-key-field-value the value of this property will
# be used as the delimiter between each value.
#
# If no value is given for this property the values of the fields in the
# unique-key-field-value will be joined together with no delimiter.
unique-key-field-value-delimiter=-

# name: zookeeper-host
# type: list
#
# This property is the list of zookeeper host names and ports.
#
zookeeper-host=localhost:10993

# name: zookeeper-client-connection-timeout
# type: integer
#
# The number of milliseconds allowed for the zookeeper client connection.
#
zookeeper-client-connection-timeout=5000

# name: zookeeper-ensemble-connection-timeout
# type: integer
#
# The number of milliseconds allowed for the zookeeper ensemble connection.
#
zookeeper-ensemble-connection-timeout=6000

# Copyright (c) 2018.  Dan Brown <dan@likethecolor.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

# The convention for lists are for each element to be delimited by a semi-colon
# for example: key=value0;value1;value2
#
# The convention for elements of a list that have more than one value is to
# delimit each element with a colon.
#
# For example, if a list contains one element and that element has 2 parts:
#
#  key=part0:part1
#
# If an entry is a list that contains elements with multiple parts:
#
#  key=partA0:partA1;partB0:partB1
#

# name: batch_size
# type: integer
#
# The number of docs to send to solr for indexing in each batch.
#
batch_size=1234

# name: collection_name
# type: string
#
# The name of solr collection.
#
collection_name=wc-en-collection

# name: delimiter
# type: string
#
# The string that delimits each column in the data file.
#
delimiter=,

# name: fields
# type: list
#
# The data file will contain multiple columns.  This application does not pay
# attention to the names of those columns as they may appear in the file (first
# line/header is ignored - see has_header below).
#
# This application uses only the column positions.  This list maps the column
# positions to the solr field names.
#
# The format of the list is:
#
#   field_name:field_type:date format
#
# The field_name is the name of the solr field.
# The field_type is the data type (see Constants.FIELD_TYPE_).
#   If no type is given string is assumed.
# The third part is an optional date format (see SimpleDateFormat).
#
fields=site_id:int;site_code:string;create_datetime:datetime:MM/dd/yyyy hh:mm:ssa;update_datetime:datetime:MM/dd/yyyy hh:mm:ssa;site_name:string;site_url:string;country:string;currency:string;language:string;mobile:string

# name: skip_fields
# type: list
#
# This is a list of field names (from the fields property above) that should
# be ignored.
#
# The data file may contain columns that should not be indexed.  This list
# contains the field names that should not be indexed.  Since fields can be
# ignored the names of the fields in the fields property list can be
# placeholders.
#
# For example:
#
#   fields=...;dummy0:int;dummy1:string
#   skip_fields=dummy0;dummy1
#
skip_fields=create_datetime;update_datetime;country;currency;language;mobile

# name: literals
# type: list
#
# There may be some values that need to be added to solr that are not in the
# data file.
#
# For instance, say every document should have the same value "site" in the field
# "index_type".  This list lets you do that.  The format of this list is:
#
#   field_name:field_type:literal value
#
# The field_name is the solr field name.  The field_type is the data type (see
# Constants.FIELD_TYPE_*).  The last field is the literal value that should
# be stored in the field.
#
literals=type:string:site;type_sort:int:3

# name: multivalue_field_delimiter
# type: string
#
# For those fields whose type is array this is the value that delimits the
# multiple values
#
multivalue_field_delimiter=\u0002

# name: has_header
# type: boolean
#
# Set this property to true if the first row of the data file should be ignored.
# Set it to false (the default value) if the first row contains data that should
# be indexed.
#
has_header=true

# name: unique_key_field_name
# value: string
#
# This is the name of the solr field that is the unique id (uniqueKey in
# schema.xml).
#
unique_key_field_name=id

# name: unique_key_field_value
# type: string or list
#
# Name or names listed in the fields and/or literals property below whose value
# should be used as the value of solr's uniqueKey (unique_key_field_name below).
#
# For example, if the value of site_id should be used as the unique id for each
# document, the property should look like:
#
#  unique_key_field_value=site_id
#
# If the value of the unique id should be index_type (from literals) and site_id
# and site_code and site_name, this property should look like:
#
#  unique_key_field_value=index_type;site_id;site_code;site_name
#
# The final value for the unique id will be the value of those fields concatenated
# with the unique_key_field_value_delimiter as a delimiter.
#
# The final value will be the value of these fields in the order given
#
unique_key_field_value=type;site_id;site_code;site_name

# name: unique_key_field_value_delimiter
# type: string
#
# If there are multiple values in the unique_key_field_value the value of this property will
# be used as the delimiter between each value.
#
# If no value is given for this property the values of the fields in the
# unique_key_field_value will be joined together with no delimiter.
unique_key_field_value_delimiter=-

# name: optimize_index
# type: boolean
#
# Set this property to true if the index should be optimized.
#
optimize_index=true

# name: path_to_data_file
# type: string
#
# This should be the full path to the file containing data that needs to be
# indexed.  This should be a file path, not a classpath.
#
path_to_data_file=/tmp/downloaded-data.csv

# name: zookeeper_host
# type: list
#
# This property is the list of zookeeper host names and ports.
#
zookeeper_host=localhost:10993

# name: zookeeper_client_connection_timeout
# type: integer
#
# The number of milliseconds allowed for the zookeeper client connection.
#
zookeeper_client_connection_timeout=5000

# name: zookeeper_ensemble_connection_timeout
# type: integer
#
# The number of milliseconds allowed for the zookeeper ensemble connection.
#
zookeeper_ensemble_connection_timeout=6000
